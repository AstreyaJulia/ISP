<?php

// Кол-во всех посещений за текущий день. current_date - сегодняшняя дата
select count (*)
from sdc_visits
where date_format(dtime,'%m-%d')  like  date_format(current_date,'%m-%d')

// Уникальные пользователи за тек. день
select COUNT(DISTINCT UserID)
from sdc_visits
where date_format(dtime,'%m-%d')  like  date_format(current_date,'%m-%d')



  // Кол-во посещений по дням, общее
SELECT count(id) AS count,
       DATE_ADD((CAST(dtime AS DATE)), INTERVAL 1 DAY ) AS day
FROM
    sdc_visits
GROUP BY
    DATE_ADD((CAST(dtime AS DATE)), INTERVAL 1 DAY )
ORDER BY
    day

выдаст данные в формате json:
[
  {
    "count": 21,
    "day": "2021-10-20"
  },
  {
    "count": 215,
    "day": "2021-10-22"
  },
  {
    "count": 5,
    "day": "2021-10-27"
  },
  {
    "count": 115,
    "day": "2021-10-28"
  },
  {
    "count": 1,
    "day": "2021-10-30"
  }
]

для графиков нужен формат json:
[
  {
    "count": [21, 215, 5, 115, 1],
    "day": ["2021-10-20", "2021-10-22", "2021-10-27", "2021-10-28", "2021-10-30"],
  }
]

еще лучше, если дата будет в привычном формате дд.мм.гггг
json тут: http://isp/api/visits/getVisits.php

рабочие места:

SELECT ChildUserType.id, CONCAT (ParentUserType.name, " ", ChildUserType.name) AS name
    FROM `sdc_room` AS ChildUserType
    LEFT JOIN `sdc_room` AS ParentUserType ON ChildUserType.affiliation = ParentUserType.id
    WHERE ChildUserType.icon ='desktop'


ВСЕ рабочие места с пользователями через - и без:
    SELECT ChildUserType.id, CONCAT (ParentUserType.name, " ", ChildUserType.name, COALESCE(concat(" - ", (users.fullname)), " ")) AS name
    FROM `sdc_room` AS ChildUserType
             LEFT JOIN `sdc_room` AS ParentUserType ON ChildUserType.affiliation = ParentUserType.id
             LEFT join `sdc_user_attributes` as users on ChildUserType.id = users.room
    WHERE ChildUserType.icon ='desktop'


Рабочие места с пользователями, ТОЛЬКО те, в которых есть пользователи:

SELECT ChildUserType.id, CONCAT (ParentUserType.name, " ", ChildUserType.name, " ", users.fullname) AS name
FROM `sdc_room` AS ChildUserType
         LEFT JOIN `sdc_room` AS ParentUserType ON ChildUserType.affiliation = ParentUserType.id
         LEFT join `sdc_user_attributes` as users on ChildUserType.id = users.room
WHERE ChildUserType.icon ='desktop' and users.room is not null


Рабочие места, ТОЛЬКО те, к которым не привязан пользователь

SELECT ChildUserType.id, CONCAT (ParentUserType.name, " ", ChildUserType.name) AS name
FROM `sdc_room` AS ChildUserType
         LEFT JOIN `sdc_room` AS ParentUserType ON ChildUserType.affiliation = ParentUserType.id
         LEFT join `sdc_user_attributes` as users on ChildUserType.id = users.room
WHERE ChildUserType.icon ='desktop' and users.room is null


Данные пользователя по ID
SELECT *, Users.id, CONCAT (ParentUserType.name, ' / ', ChildUserType.name) AS name
          FROM `sdc_users` AS Users
            LEFT JOIN `sdc_user_attributes` AS UserAttributes on Users.id = UserAttributes.internalKey
            LEFT JOIN `sdc_room` AS ChildUserType ON UserAttributes.room = ChildUserType.id
            LEFT JOIN `sdc_room` AS ParentUserType ON ChildUserType.affiliation = ParentUserType.id
          WHERE Users.id = ?





//Полнотекстовый поиск. В базе необходимо сделать индес типа FULLTEXT
$str = "чер супер свет сотрудник";

$str_sql = "";
foreach (explode(" ", $str) as $key => $value) {
  $str_sql .= '*'.$value.'*';
}

// Приводим $str_sql к виду "*чер**супер**свет**сотрудник*"
$sql = "SELECT
      sdc_user_attributes.fullname,
      sdc_user_attributes.comment
    FROM sdc_user_attributes
    WHERE MATCH (`fullname`,`comment`) AGAINST ('$str_sql' IN BOOLEAN MODE)";


// составим запрос из приходящих параметров
function setUpdateUser($params, $where) {
    $str = [];
    foreach ($params as $key => $value) {
      if ("`".$key."`=:".$key != str_replace(' ', '', '`id` = :id')) {
        $str[] = "`".$key."`=:".$key;
      }
    }
      $str = implode(", ", $str);
        return "UPDATE sdc_users SET $str WHERE $where";
  }
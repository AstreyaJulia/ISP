/**
 * Отправка GET и POST
 * @param {string} method - метод - GET или POST
 * @param {string} url - url запроса
 * @param {Object} parameters - параметры в виде массива
 */
const sendAjaxPromise = (method, url, parameters) => new Promise((onFulfilled, onFail) => {
  const xhr = new XMLHttpRequest();
  switch (method) {
    /** Настраиваем его: GET или POST, URL */
    case "GET":
      let queryString;
      if (parameters !== null) {
        queryString = Object.keys(parameters).map(key => key + '=' + parameters[key]).join('&');
      } else {
        queryString = null;
      }
      xhr.open(method, url + "?" + queryString, true);
      xhr.setRequestHeader('Accept', 'application/json, text/plain, */*');
      xhr.onload = () => onFulfilled(JSON.parse(xhr.response));
      xhr.onerror = () => onFail(xhr.status);
      xhr.send(null);
      break;

    case "POST":
      xhr.open(method, url, true);
      xhr.setRequestHeader('Accept', 'application/json, text/plain, */*');
      xhr.onload = () => onFulfilled(JSON.parse(xhr.response));
      xhr.onerror = () => onFail(xhr.status);
      xhr.send(parameters);
      break;
  }
});
